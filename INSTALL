Overview of the build system
****************************
The overall build system is composed of a configuration shell script and a GNU
Makefile layered on top of the OCamlbuild system.


The easiest way
***************
Building and installing Onotify is essentially a matter of executing the
following commands from the top of the project tree :

$ ./configure --prefix=<installation directory>

$ make install

This will build and install the library as well as the associated documentation.


GODI installation
*****************
Assuming you have a GODI distribution installed under /opt/godi. You can easily
install Onotify in this distribution :

$ ./configure --prefix=/opt/godi --libdir=/opt/godi/lib/ocaml/site-lib
$ make install


Quickly test the library
************************
Onotify is shipped with a simple test program to check the well behavior of the library.
To use it :

$ ./configure
$ make test
$ ./test_inotify.byte <dir> or ./test_inotify.native <dir>


Tuning the configuration phase
******************************
The 'configure' script supports a variety of options and environment variables
to customize the configuration phase. The exhaustive option list can be seen
with the following command :

$ ./configure --help


Cleaning the project tree
*************************
You can easily remove all files produced during the build phase with the
following command :

$ make clean

or, if you wish to remove also the files produced during the configuration
phase :

$ make distclean


Building Out Of Source NOT SUPPORTED
************************************
Unlike many other build systems such as Autotools, you must execute the
configure script from the top of the project tree.


Makefile other targets
**********************
The makefile supports some other targets :

make lib    : build only the OCaml part of the library
make stubs  : build only the C part of the library
make doc    : build only the documentation
make dist   : produce a tarball of the project (works only from a Git
	      repository)

